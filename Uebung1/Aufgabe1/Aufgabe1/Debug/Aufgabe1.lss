
Aufgabe1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000f4  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000124  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000ac  00000000  00000000  00000144  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000006d  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000bb  00000000  00000000  0000025d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000318  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000135  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000024  00000000  00000000  00000471  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000495  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 4e 00 	jmp	0x9c	; 0x9c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
int main(void)
{
	
	//DDRB = 0x07; // Set first 3 Pins of Port B as outputs
	
	DDRB = (1 << DDB0) | (1 << DDB1) | (1 << DDB2);
  80:	87 e0       	ldi	r24, 0x07	; 7
  82:	84 b9       	out	0x04, r24	; 4

    while(1)
    {	
		
		for(short counter = 0x00; counter <= 0x07; counter++){
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	20 e0       	ldi	r18, 0x00	; 0

			PORTB = (0xFF ^ counter)^0xFF;
  8c:	85 b9       	out	0x05, r24	; 5
	DDRB = (1 << DDB0) | (1 << DDB1) | (1 << DDB2);

    while(1)
    {	
		
		for(short counter = 0x00; counter <= 0x07; counter++){
  8e:	01 96       	adiw	r24, 0x01	; 1
  90:	88 30       	cpi	r24, 0x08	; 8
  92:	91 05       	cpc	r25, r1
  94:	dc f3       	brlt	.-10     	; 0x8c <main+0xc>
  96:	83 2f       	mov	r24, r19
  98:	92 2f       	mov	r25, r18
  9a:	f8 cf       	rjmp	.-16     	; 0x8c <main+0xc>

0000009c <_exit>:
  9c:	f8 94       	cli

0000009e <__stop_program>:
  9e:	ff cf       	rjmp	.-2      	; 0x9e <__stop_program>
